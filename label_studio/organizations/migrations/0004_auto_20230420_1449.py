# Generated by Django 3.2.16 on 2023-04-20 07:49

from django.db import migrations

def create_groups(apps, schema_migration):
    User = apps.get_model('organizations', 'User')
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')

    # Create owner role
    owner = Group(name='owner')
    owner.save()
    full_right= list(Permission.objects.all())

    # creator_permissions = [
    #     add_photo,
    #     change_photo,
    #     delete_photo,
    #     view_photo,
    # ]
    owner_permission = full_right
    owner.permissions.set(owner_permission)

    # create admin role
    admin = Group(name='administrator')
    admin.save()
    add_organ = Permission.objects.get(codename='add_organization')
    delete_organ = Permission.objects.get(codename='delete_organization')
    admin_permission= full_right.remove(add_organ)
    admin_permission= admin_permission.remove(delete_organ)
    admin.permissions.set(admin_permission)

    # create manager role
    manager = Group(name='manager')
    manager.save()

    add_project = Permission.objects.get(codename='add_project')
    delete_project = Permission.objects.get(codename='delete_project')

    add_user = Permission.objects.get(codename='add_user')
    delete_user = Permission.objects.get(codename='delete_user')

    non_manager_permission = [add_project, delete_project, add_user, delete_user]

    manager_permission= [item for item in admin_permission if item not in non_manager_permission]
    manager.permissions.set(manager_permission)

    # create annotator role
    annotator = Group(name='annotator')
    annotator.save()

    view_project = Permission.objects.get(codename='view_project')
    add_annotation = Permission.objects.get(codename='add_annotation')
    change_annotation = Permission.objects.get(codename='change_annotation')
    delete_annotation = Permission.objects.get(codename='delete_annotation')
    view_annotation = Permission.objects.get(codename='view_annotation')
    
    add_annotationdraf = Permission.objects.get(codename='add_annotationdraf')
    change_annotationdraf  = Permission.objects.get(codename='change_annotationdraf')
    delete_annotationdraf  = Permission.objects.get(codename='delete_annotationdraf')
    view_annotationdraf  = Permission.objects.get(codename='view_annotationdraf')
    
    add_filter = Permission.objects.get(codename='add_filter')
    change_filter  = Permission.objects.get(codename='change_filter')
    delete_filter  = Permission.objects.get(codename='delete_filter')
    view_filter  = Permission.objects.get(codename='view_filter')

    add_filtergroup = Permission.objects.get(codename='add_filtergroup')
    change_filtergroup  = Permission.objects.get(codename='change_filtergroup')
    delete_filtergroup  = Permission.objects.get(codename='delete_filtergroup')
    view_filtergroup  = Permission.objects.get(codename='view_filtergroup')
    
    add_view = Permission.objects.get(codename='add_view')
    change_view  = Permission.objects.get(codename='change_view')
    delete_view  = Permission.objects.get(codename='delete_view')
    view_view  = Permission.objects.get(codename='view_view')
    
    add_label = Permission.objects.get(codename='add_label')
    change_label  = Permission.objects.get(codename='change_label')
    delete_label  = Permission.objects.get(codename='delete_label')
    view_label  = Permission.objects.get(codename='view_label')
    
    change_task  = Permission.objects.get(codename='change_task')
    view_task  = Permission.objects.get(codename='view_task')
    
    view_projectboarding  = Permission.objects.get(codename='view_projectonboarding')

    annotator_permission = [view_project, add_annotation, change_annotation, delete_annotation, view_annotation,
                              add_annotationdraf, change_annotationdraf, delete_annotationdraf, view_annotationdraf,
                              add_filter, change_filter, delete_filter, view_filter,
                              add_view, change_view, delete_view, view_view,
                              add_label, change_label, delete_label , view_label,
                              view_task, change_task,
                              view_projectboarding,
                              add_filtergroup, change_filtergroup, delete_filtergroup, view_filtergroup]
    
    annotator.permissions.set(annotator_permission)
                            

class Migration(migrations.Migration):

    dependencies = [
        ('organizations', '0003_auto_20211010_1339'),
    ]

    operations = [
    ]
